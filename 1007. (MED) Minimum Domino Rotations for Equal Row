class Solution {
    int findSwaps(int[] top, int[] bottom, int val){
        int n = top.length;
        int topSwap=0, bottomSwap=0;
        for(int i=0; i<n; i++){
            if(top[i]!=val && bottom[i]!=val)
                return -1;
            else if(top[i]!=val)
                topSwap++;
            else if(bottom[i]!=val)
                bottomSwap++;
        }
        return Math.min(topSwap, bottomSwap);
    }
    public int minDominoRotations(int[] tops, int[] bottoms) {
        int result = Integer.MAX_VALUE;
        for(int i=1; i<=6; i++){
            int swaps = findSwaps(tops, bottoms, i);
            if(swaps!=-1)
                result = Math.min(swaps, result);
        }
        return result == Integer.MAX_VALUE? -1:result;
    }
}
